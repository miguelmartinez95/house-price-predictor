name: MLOps Pipeline

on:
  workflow_dispatch:
    inputs:
      run_all:
        description: 'Run all jobs'
        required: false
        default: 'true'
      run_data_processing:
        description: 'Run data processing job'
        required: false
        default: 'false'

      run_model_training:
        description: 'Run model trainnig job'
        required: false
        default: 'false'
      run_build_and_publish:
        description: 'Run build and publish job'
        required: false
        default: 'false'
  release:
    types: [created]
    branches: [ main ]
    tags: [ 'v*.*.*' ]


jobs:
  data-processing:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set Up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Process Data 
      shell: pwsh
      run: |
        python src\data\run_processing.py `
        --input data\raw\house_data.csv `
        --output data\processed\cleaned_house_data.csv

    - name: Engineer Features 
      shell: pwsh
      run: |
        python src\features\engineer.py `
        --input data\processed\cleaned_house_data.csv `
        --output data\processed\featured_house_data.csv `
        --preprocessor models\trained\preprocessor.pkl

    - name: Upload Processed Data 
      uses: actions/upload-artifact@v4
      with:
        name: processed-data
        path: data/processed/featured_house_data.csv

    - name: Upload Preprocessor 
      uses: actions/upload-artifact@v4
      with: 
        name: preprocessor
        path: models/trained/preprocessor.pkl

  model-training:
    needs: data-processing
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set Up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Install Dependencies 
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Download processed data 
      uses: actions/download-artifact@v5
      with:
        name: processed-data
        path: data/processed/

    - name: Set up MLFlow
      shell: pwsh
      run: |
          docker pull ghcr.io/mlflow/mlflow:latest
          docker run -d `
            -p 5555:5000 `
            --name mlflow-server `
            ghcr.io/mlflow/mlflow:latest `
            mlflow server `
              --host 0.0.0.0 `
              --backend-store-uri sqlite:///mlflow.db `
              --default-artifact-root C:\Users\mmcomesana\Cursos\Udemy\MLOps\house-price-predictor\actions-runner\mlruns

    - name: Wait for MLFlow to start
      shell: pwsh
      run: |
        for ($i=0; $i -lt 10; $i++) {
          try {
            Invoke-WebRequest http://localhost:5555/health -UseBasicParsing -TimeoutSec 5
            break
          } catch {
            Start-Sleep -Seconds 5
          }
        }

    - name: Train Model 
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path models
        python src\models\train_model.py `
        --config configs\model_config.yaml `
        --data data\processed\featured_house_data.csv `
        --models-dir models `
        --mlflow-tracking-uri http://localhost:5555

    - name: Upload Trained Model 
      uses: actions/upload-artifact@v4
      with:
        name: trained-model
        path: models/

    - name: Clean up MLFlow
      shell: pwsh
      run: |
        docker stop mlflow-server; docker rm mlflow-server

  
  build-and-publish:
    needs: model-training
    runs-on: self-hosted

    steps:
    - name: Checkout Code 
      uses: actions/checkout@v2

    - name: Download Trained Model 
      uses: actions/download-artifact@v5 
      with:
        name: trained-model
        path: models/

    - name: Download preprocessor
      uses: actions/download-artifact@v5
      with:
        name: preprocessor
        path: models/trained/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and test Docker image
      shell: pwsh
      run: |
        $COMMIT_HASH = $env:GITHUB_SHA.Substring(0,7)
        $IMAGE = "docker.io/${{ vars.DOCKERHUB_USERNAME }}/house-price-model:$COMMIT_HASH"
        docker build -t $IMAGE -f Dockerfile .
        docker run -d -p 8000:8000 --name test-api $IMAGE
        for ($i=0; $i -lt 10; $i++) {
          try {
            Invoke-WebRequest http://localhost:8000/health -UseBasicParsing -TimeoutSec 5
            break
          } catch {
            Start-Sleep -Seconds 5
          }
        }
        docker logs test-api

    - name: Clean up Test Container
      shell: pwsh
      run: |
        docker stop test-api; docker rm test-api

    - name: Log in to Github Container Registry
      uses: docker/login-action@v3
      with: 
        registry: docker.io
        username: ${{vars.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    - name: Push Docker image to DockerHub 
      shell: pwsh
      run: |
        $COMMIT_HASH = $env:GITHUB_SHA.Substring(0,7)
        $IMAGE = "docker.io/${{ vars.DOCKERHUB_USERNAME }}/house-price-model:$COMMIT_HASH"
        docker tag $IMAGE "docker.io/${{ vars.DOCKERHUB_USERNAME }}/house-price-model:latest"
        docker push $IMAGE
        docker push "docker.io/${{ vars.DOCKERHUB_USERNAME }}/house-price-model:latest"

    - name: Set up kubectl 
      uses: azure/setup-kubectl@v4
      with:
        version: latest

    - name: Configure kubectl
      shell: pwsh
      run: |
        $KubePath = "$HOME\.kube"
        New-Item -ItemType Directory -Force -Path $KubePath
        Set-Content -Path "$KubePath\config" -Value "${{ secrets.KUBECONFIG_CONTENT }}"

    - name: Deploy new image to Kubernetes
      shell: pwsh
      run: |
        $COMMIT_HASH = $env:GITHUB_SHA.Substring(0,7)
        $IMAGE = "docker.io/${{ vars.DOCKERHUB_USERNAME }}/house-price-model:$COMMIT_HASH"
        Write-Host "Updating house-predictor deployment to $IMAGE"
        kubectl set image deployment/house-predictor house-predictor=$IMAGE
        kubectl rollout status deployment/house-predictor

    - name: Trigger Streamlit workflow
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        event-type: deploy-streamlit
        client-payload: '{"ref": "main"}'






